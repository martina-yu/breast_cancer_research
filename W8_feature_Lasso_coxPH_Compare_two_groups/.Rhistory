library(writexl)
library(dplyr)
library(matrixStats)
library("survival")
library("survminer")
library(ggplot2)
getwd()
data_survival <- read.csv("/Users/yuzimeng/Desktop/CBB/Yale/Lajos_Lab/W2_DFA&SA_on_clinic_data/placebo_both_clinic_gene_data_for_training_after_merged.csv")
output_dir <- "/Users/yuzimeng/Desktop/CBB/Yale/Lajos_Lab/W8_feature_Lasso_coxPH_Compare_two_groups"
p_val_threshold <- 0.05
p_threshold <- 0.05
n_total_cols <- ncol(data_survival)
n_clinical_cols <- 10
gene_columns_start <- 2
gene_columns_end <- n_total_cols - 10
gene_cols_index <- 2:(n_total_cols - n_clinical_cols)
# gene_cols_index <- 2:1000
gene_expression_data <- data_survival[, gene_cols_index]
clinical_data <- data_survival[, -gene_cols_index]
TPM <- 0.8
MAD <- 0.2
# parameter_grid <- expand.grid(TPM = TPM, MAD = MAD)
num_patients <- nrow(gene_expression_data)
results_list <- list()
set.seed(42)
result_list <- list()
hr_threshold_high <- 1.5
hr_threshold_low <- 1/1.5
n <- 55
tpm <- TPM
mad <- MAD
print(paste('TPM:', tpm,'|','MAD:', mad))
threshold <- tpm * num_patients
genes_to_keep_low_expr <- colSums(gene_expression_data < 1) < threshold
gene_expression_data_filtered1 <- gene_expression_data[, genes_to_keep_low_expr]
print(paste('after TPM:',ncol(gene_expression_data_filtered1)))
mad_values <- apply(gene_expression_data_filtered1, 2, mad, na.rm = TRUE)
mad_sorted <- sort(mad_values, decreasing = TRUE)
num_genes_to_keep <- floor(length(mad_sorted) * mad)
genes_to_keep_mad <- names(mad_sorted[1:num_genes_to_keep]) ## keeped gene names
gene_expression_data_filtered2 <- gene_expression_data_filtered1[, genes_to_keep_mad]
print(paste('after TPM and MAD:',ncol(gene_expression_data_filtered2)))
gene_expression_log2 <- log2(gene_expression_data_filtered2 + 1)
survival_object <- Surv(data_survival$`Time.to.event.if.any..days.`, data_survival$`IDFS.Event`)
x_matrix <- as.matrix(gene_expression_log2)
cv_fit <- cv.glmnet(x = x_matrix,
y = survival_object,
family = "cox",
alpha = 1)
library(glmnet)
survival_object <- Surv(data_survival$`Time.to.event.if.any..days.`, data_survival$`IDFS.Event`)
x_matrix <- as.matrix(gene_expression_log2)
cv_fit <- cv.glmnet(x = x_matrix,
y = survival_object,
family = "cox",
alpha = 1)
best_lambda <- cv_fit$lambda.1se
selected_genes_coefs <- coef(cv_fit, s = best_lambda)
selected_genes <- selected_genes_coefs[selected_genes_coefs[, 1] != 0, ]
selected_gene_names <- names(selected_genes)
print("Selected genes by Lasso-Coxph:")
print(selected_gene_names)
x_matrix
cv_fit <- cv.glmnet(x = x_matrix,
y = survival_object,
family = "cox",
alpha = 1)
cv_fit
best_lambda <- cv_fit$lambda.1se
best_lambda
selected_genes_coefs <- coef(cv_fit, s = best_lambda)
selected_genes_coefs <- coef(cv_fit, s = best_lambda)
selected_genes <- selected_genes_coefs[selected_genes_coefs[, 1] != 0, ]
selected_genes
best_lambda
cv_fit <- cv.glmnet(x = x_matrix,
y = survival_object,
family = "cox",
alpha = 0.1)
best_lambda <- cv_fit$lambda.1se
best_lambda
selected_genes_coefs <- coef(cv_fit, s = best_lambda)
selected_genes_coefs
selected_genes <- selected_genes_coefs[selected_genes_coefs[, 1] != 0, ]
selected_gene_names <- names(selected_genes)
selected_gene_names
tpm <- TPM
mad <- MAD
print(paste('TPM:', tpm,'|','MAD:', mad))
threshold <- tpm * num_patients
genes_to_keep_low_expr <- colSums(gene_expression_data < 1) < threshold
gene_expression_data_filtered1 <- gene_expression_data[, genes_to_keep_low_expr]
print(paste('after TPM:',ncol(gene_expression_data_filtered1)))
mad_values <- apply(gene_expression_data_filtered1, 2, mad, na.rm = TRUE)
mad_sorted <- sort(mad_values, decreasing = TRUE)
num_genes_to_keep <- floor(length(mad_sorted) * mad)
genes_to_keep_mad <- names(mad_sorted[1:num_genes_to_keep]) ## keeped gene names
gene_expression_data_filtered2 <- gene_expression_data_filtered1[, genes_to_keep_mad]
print(paste('after TPM and MAD:',ncol(gene_expression_data_filtered2)))
gene_expression_log2 <- log2(gene_expression_data_filtered2 + 1)
survival_object <- Surv(data_survival$`Time.to.event.if.any..days.`, data_survival$`IDFS.Event`)
x_matrix <- as.matrix(gene_expression_log2)
x_matrix
cv_fit <- cv.glmnet(x = x_matrix,
y = survival_object,
family = "cox",
alpha = 0.1)
best_lambda <- cv_fit$lambda.min
best_lambda
cv_fit <- cv.glmnet(x = x_matrix,
y = survival_object,
family = "cox",
alpha = 1)
best_lambda <- cv_fit$lambda.min
best_lambda
selected_genes_coefs <- coef(cv_fit, s = best_lambda)
selected_genes_coefs
selected_genes <- selected_genes_coefs[selected_genes_coefs[, 1] != 0, ]
selected_gene_names <- names(selected_genes)
selected_genes
selected_gene_names
gene_expression_log2 <- log2(gene_expression_data_filtered2 + 1)
library(writexl)
library(dplyr)
library(matrixStats)
library("survival")
library(glmnet)
library("survminer")
library(ggplot2)
### -------------- varibale definition -------------- ###
getwd()
data_survival <- read.csv("/Users/yuzimeng/Desktop/CBB/Yale/Lajos_Lab/W2_DFA&SA_on_clinic_data/placebo_both_clinic_gene_data_for_training_after_merged.csv")
output_dir <- "/Users/yuzimeng/Desktop/CBB/Yale/Lajos_Lab/W8_feature_Lasso_coxPH_Compare_two_groups"
p_val_threshold <- 0.05
p_threshold <- 0.05
n_total_cols <- ncol(data_survival)
n_clinical_cols <- 10
gene_columns_start <- 2
gene_columns_end <- n_total_cols - 10
gene_cols_index <- 2:(n_total_cols - n_clinical_cols)
# gene_cols_index <- 2:1000
gene_expression_data <- data_survival[, gene_cols_index]
clinical_data <- data_survival[, -gene_cols_index]
TPM <- 0.8
MAD <- 0.2
# parameter_grid <- expand.grid(TPM = TPM, MAD = MAD)
num_patients <- nrow(gene_expression_data)
results_list <- list()
set.seed(42)
result_list <- list()
hr_threshold_high <- 1.5
hr_threshold_low <- 1/1.5
n <- 55
tpm <- TPM
mad <- MAD
print(paste('TPM:', tpm,'|','MAD:', mad))
threshold <- tpm * num_patients
genes_to_keep_low_expr <- colSums(gene_expression_data < 1) < threshold
gene_expression_data_filtered1 <- gene_expression_data[, genes_to_keep_low_expr]
print(paste('after TPM:',ncol(gene_expression_data_filtered1)))
mad_values <- apply(gene_expression_data_filtered1, 2, mad, na.rm = TRUE)
mad_sorted <- sort(mad_values, decreasing = TRUE)
num_genes_to_keep <- floor(length(mad_sorted) * mad)
genes_to_keep_mad <- names(mad_sorted[1:num_genes_to_keep]) ## keeped gene names
gene_expression_data_filtered2 <- gene_expression_data_filtered1[, genes_to_keep_mad]
print(paste('after TPM and MAD:',ncol(gene_expression_data_filtered2)))
gene_expression_log2 <- log2(gene_expression_data_filtered2 + 1)
survival_object <- Surv(data_survival$`Time.to.event.if.any..days.`, data_survival$`IDFS.Event`)
x_matrix <- as.matrix(gene_expression_log2)
cv_fit <- cv.glmnet(x = x_matrix,
y = survival_object,
family = "cox",
alpha = 1)
best_lambda <- cv_fit$lambda.min
selected_genes_coefs <- coef(cv_fit, s = best_lambda)
selected_genes <- selected_genes_coefs[selected_genes_coefs[, 1] != 0, ]
selected_gene_names <- names(selected_genes)
print("Selected genes by Lasso-Coxph:")
print(selected_gene_names)
print("Number of selected genes:")
print(length(selected_gene_names))
final_formula_predictors <- paste(selected_gene_names, collapse = " + ")
final_formula_str <- paste("Surv(`Time.to.event.if.any..days.`, `IDFS.Event`) ~", final_formula_predictors)
final_multivariate_formula <- as.formula(final_formula_str)
final_multivariate_cox_fit <- coxph(final_multivariate_formula, data = data_survival)
final_multicox_summary <- summary(final_multivariate_cox_fit)
final_multicox_summary
file_name <- paste0("Result_Lasso_with_Multicox.xlsx")
full_file_path <- file.path(output_dir, file_name)
write_xlsx(final_multicox_summary, path = full_file_path)
final_multivariate_cox_fit
write_xlsx(final_multivariate_cox_fit, path = full_file_path)
final_multicox_summary
coef_table <- as.data.frame(final_multicox_summary$coefficients)
conf_int_table <- as.data.frame(final_multicox_summary$conf.int)
final_results_df <- cbind(coef_table, conf_int_table)
final_results_df$gene_name <- rownames(final_results_df)
print(final_results_df)
file_name <- paste0("Result_Lasso_with_Multicox.xlsx")
full_file_path <- file.path(output_dir, file_name)
write_xlsx(final_results_df, path = full_file_path)
best_lambda
final_formula_predictors <- paste(selected_gene_names, collapse = " + ")
final_formula_str <- paste("Surv(`Time.to.event.if.any..days.`, `IDFS.Event`) ~", final_formula_predictors)
final_multivariate_formula <- as.formula(final_formula_str)
final_multivariate_cox_fit <- coxph(final_multivariate_formula, data = data_survival)
final_multicox_summary <- summary(final_multivariate_cox_fit)
coef_table <- as.data.frame(final_multicox_summary$coefficients)
conf_int_table <- as.data.frame(final_multicox_summary$conf.int)
final_results_df <- cbind(coef_table, conf_int_table)
final_results_df$p.adjusted.FDR <- p.adjust(final_results_df$`Pr(>|z|)`, method = "fdr")
final_results_df$gene_name <- rownames(final_results_df)
final_results_df <- final_results_df[, c("gene_name", "coef", "exp(coef)", "se(coef)", "z", "Pr(>|z|)", "p.adjusted.FDR", "lower .95", "upper .95")]
print(final_results_df)
file_name <- paste0("Result_Lasso_with_Multicox.xlsx")
full_file_path <- file.path(output_dir, file_name)
write_xlsx(final_results_df, path = full_file_path)
